.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AUTOMUNKIIMPORTER 1"
.TH AUTOMUNKIIMPORTER 1 "2016-01-30" "0.4.0" "Tool Reference Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
autoMunkiImporter \- Automatically import apps into Munki
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
autoMunkiImporter.pl [options]
.PP
.Vb 10
\& Options:
\&        \-\-data /path/to/data[.plist]            Path to the data plist or directory containing data plists
\&        \-\-download                              Only download the file (doesn\*(Aqt import into Munki)
\&        \-\-force\-install\-dependencies            Force install required Perl Modules
\&        \-\-help | \-h | \-?                        Show this help text
\&        \-\-ignoreModDate                         Ignore the modified date and version info from the data plist
\&        \-\-install\-dependencies                  Attempt to install the required Perl Modules
\&        \-\-reset                                 Resets the modified date for an app
\&        \-\-silent                                Suppresses output to STDOUT and STDERR
\&        \-\-settings /path/to/settings.plist      Optional path to a default settings plist
\&        \-\-test                                  Tests that the script has all of the required items and rights
\&        \-\-verbose | \-v                          Show verbose output, can be used twice for debug info as well
\&        \-\-version                               Prints scripts version
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-data\fR /path/to/data[.plist]" 8
.IX Item "--data /path/to/data[.plist]"
Path to the data plist, or a directory containing data plists. The data plist contains 
the configuration the script needs to download a particular application.
.Sp
See \fB\s-1DATA PLIST\s0\fR for structure of the plist.
.IP "\fB\-\-download\fR" 8
.IX Item "--download"
Download the file to /tmp, and exits, without importing the item to Munki. It does not update the 
modified time or import to Munki.
.IP "\fB\-\-force\-install\-dependencies\fR" 8
.IX Item "--force-install-dependencies"
Force install the required Perl Modules using the \s-1CPANM\s0 script.
.IP "\fB\-\-help | \-h | \-?\fR" 8
.IX Item "--help | -h | -?"
Show this usage and help text.
.IP "\fB\-\-install\-dependencies\fR" 8
.IX Item "--install-dependencies"
Attempt to install the required Perl Modules using the \s-1CPANM\s0 script.
.IP "\fB\-\-ignoreModDate\fR" 8
.IX Item "--ignoreModDate"
Ignore the modified date and version info from the data plist. This will cause the item to be 
(re)imported into Munki.
.IP "\fB\-\-reset\fR" 8
.IX Item "--reset"
Resets the modified date of an application to the current modification date, without downloading or 
importing the item into Munki. Use this when the latest version of an application is in your Munki 
repo, so that this script doesn't attempt to re add it, of if you want to skip a version.
.IP "\fB\-\-silent\fR" 8
.IX Item "--silent"
Suppresses output to \s-1STDOUT\s0 and \s-1STDERR.\s0 Verbose information is still written to the log. If 
\&\-\-silent is provided in conjunction with \-\-install\-dependencies, \-\-test, or \-\-version it is 
ignored.
.IP "\fB\-\-settings /path/to/settings.plist\fR" 8
.IX Item "--settings /path/to/settings.plist"
Optional path to a global settings plist. If not provided 
/Library/Application Support/autoMunkiImporter/_DefaultConfig.plist is used. This plist contains 
the default settings for the script, some of which can be overridden by the data plists.
.IP "\fB\-\-test\fR" 8
.IX Item "--test"
Checks that the script passes it's initial checks, and that it has permissions to write to
the appropriate locations.
.IP "\fB\-\-verbose | \-v\fR" 8
.IX Item "--verbose | -v"
Show verbose output. If used a second time in addition to the verbose info, you will also get
debug information. The verbose version of the output is logged when the logging level is set
to verbose or lower. Debug information is also written to the log when verbose is provided twice.
.Sp
If \-\-silent is provided, it takes priority and suppresses all output to \s-1STDOUT.\s0
.IP "\fB\-\-version\fR" 8
.IX Item "--version"
Prints scripts version to \s-1STDOUT.\s0
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBautoMunkiImporter.pl\fR will, based on the input data, determine if there is a new version of an 
application available. If a new version is available it will download the new file, extract it, and 
then import it into Munki.
.PP
It can handle \fBstatic\fR URLs, \fBdynamic\fR URLs where the \s-1URL\s0 or link to the \s-1URL\s0 changes based off the 
version (it can also handle landing pages before the actual download), and \fBSparkle\fR \s-1RSS\s0 feeds. 
This generic approach should allow you to monitor most applications.
.PP
It supports downloads in flat PKGs, \s-1DMG \s0(including support for disk images with licence 
agreements), \s-1ZIP, TAR, TAR.GZ, TGZ,\s0 and \s-1TBZ.\s0 It will import a single item (Application or \s-1PKG\s0) from 
anywhere within the download, so the content doesn't have to be in the top level folder. This is 
achieved by using find to locate the item (e.g. the Adobe Flash Player.pkg from within the Adobe 
Flash download).
.SH "DATA PLIST"
.IX Header "DATA PLIST"
Auto Munki Importer uses data plists, to inform it about a \s-1URL\s0 to monitor, how to determine the 
final \s-1URL\s0 for the download, and to track the modification dates of the downloads.
.SS "\s-1REQUIRED KEYS\s0"
.IX Subsection "REQUIRED KEYS"
The data plist needs to contain a dictionary called \fBautoMunkiImporter\fR, which contains the 
following required keys.
.IP "\fBURLToMonitor\fR <string>" 8
.IX Item "URLToMonitor <string>"
This is the \s-1URL\s0 to monitor for new versions of an application.
.IP "\fBname\fR <string>" 8
.IX Item "name <string>"
The name used within Munki (and as an identifier in the logs or emails from this script).
.IP "\fBtype\fR <string>" 8
.IX Item "type <string>"
The type needs to be one of the following supported types:\-
.RS 8
.IP "\fBstatic\fR" 8
.IX Item "static"
Use static when the \s-1URL\s0 doesn't change. This is for sites that just update the file at the same \s-1URL \s0
when a new version is released. E.g. Google Chrome
.IP "\fBdynamic\fR" 8
.IX Item "dynamic"
Use dynamic when the download link changes with each new version. This type allows you to search 
the page and it's source for the download link to use. Dynamic also has an additional required and 
optional key. See below:\-
.RS 8
.IP "\fBdownloadLinkRegex\fR \- Required" 8
.IX Item "downloadLinkRegex - Required"
This is the either the text of the download link 
(e.g. \s-1THIS TEXT\s0 from: <a href="http://example.com/app.dmg>\s-1THIS\s0 TEXT</a>), or a Perl 
compatible regular expression that searches the entire pages source.
.IP "\fBsecondLinkRegex\fR \- Optional" 8
.IX Item "secondLinkRegex - Optional"
Some web pages will redirect to a second page which contains the actual download. In this case this 
key is used to find the download. It works the same as the downloadLinkRegex key.
.RE
.RS 8
.RE
.IP "\fBsparkle\fR" 8
.IX Item "sparkle"
Apps that use the Sparkle framework have a \s-1RSS\s0 based Appcast that list updates. This option will 
parse that feed for the update. To find if an app uses Sparkle run: 
\&\f(CW\*(C`find /path/to/application.app \-name Sparkle.framework \-print\*(C'\fR. To find the \s-1URL\s0 Sparkle is using,
see the \fB\s-1FINDING THE URL\s0\fR section.
.RE
.RS 8
.RE
.IP "\fBitemToImport\fR <string>" 8
.IX Item "itemToImport <string>"
This is the name of the item to be imported into Munki. For example My App.app. Case insensitive 
\&\fBfind\fR is used to locate the application, so it can be anywhere in the download (even within 
application bundles), and wildcards are accepted.
.SS "\s-1OPTIONAL KEYS\s0"
.IX Subsection "OPTIONAL KEYS"
.IP "\fBdisabled\fR <boolean>" 8
.IX Item "disabled <boolean>"
If true, disable checking of the application. Useful if you are checking a directory of data plists 
and want to skip an application without removing it.
.IP "\fBemailReports\fR <boolean>" 8
.IX Item "emailReports <boolean>"
If true, email reports will be sent on successfully importing a new application, or on a critical 
error (besides the initial environment checks).
.IP "\fBfromAddress\fR <string>" 8
.IX Item "fromAddress <string>"
Email address to send reports from. A default email address should be specified in the settings 
plist, but if present in the data file it will override the default.
.IP "\fBlogFile\fR <string>" 8
.IX Item "logFile <string>"
Path to log file. A default log file should be specified in the settings plist, but if present in 
the data file it will override the default.
.IP "\fBmunkiimportOptions\fR <string>" 8
.IX Item "munkiimportOptions <string>"
Additional command line options to pass to munkiimport. See munkiimport \-\-help and 
makepkginfo \-\-help for available options.
.Sp
Also see \fB\s-1MUNKI KEYS\s0\fR for an additional way of providing data to be incorporated into the 
pkginfo's generated by Munki.
.IP "\fBtoAddress\fR <string>" 8
.IX Item "toAddress <string>"
Email address to send reports to. A default email address should be specified in the settings 
plist, but if present in the data file it will override the default.
.IP "\fBuserAgent\fR <string>" 8
.IX Item "userAgent <string>"
Some websites return different content based on the User Agent. This key allows you to specify the 
user agent to use. If this key is present it will override the user agent in the settings plist.
.SS "\s-1MUNKI KEYS\s0"
.IX Subsection "MUNKI KEYS"
In addition to providing options to munkiimport (and in turn makepkginfo) via the 
munkiimportOptions key, you can at the top level of the data plist include keys that will be copied 
across to the pkginfo file.
.PP
This can be useful with items like pre and post scripts, so that instead of having to maintain 
copies of the script, you can just copy the item into the data plist like you would to a pkginfo 
and the script will automatically add it. Use this for items that don't typically change between 
versions.
.PP
Any keys at the top level of the plist will override those in the generated pkginfo. So if you say 
used the munkiimportOptions key and include \-\-catalog prod, but had a catalog array at the top of 
the data plist that contained 2 strings (autopkg, dev) then the final pkginfo would be set to 
autopkg, and dev, not prod.
.SS "\s-1EXAMPLES\s0"
.IX Subsection "EXAMPLES"
Example \*(L"Static\*(R" Data Plist for Google Chrome
.PP
.Vb 10
\&  <?xml version="1.0" encoding="UTF\-8"?>
\&  <!DOCTYPE plist PUBLIC "\-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList\-1.0.dtd">
\&  <plist version="1.0">
\&  <dict>
\&          <key>autoMunkiImporter</key>
\&          <dict>
\&                  <key>URLToMonitor</key>
\&                  <string>https://dl.google.com/chrome/mac/stable/GGRM/googlechrome.dmg</string>
\&                  <key>emailReports</key>
\&                  <true/>
\&                  <key>itemToImport</key>
\&                  <string>Google Chrome.app</string>
\&                  <key>name</key>
\&                  <string>Chrome</string>
\&                  <key>munkiimportOptions</key>
\&                  <string>\-\-subdirectory "apps/google"</string>
\&                  <key>type</key>
\&                  <string>static</string>
\&          </dict>
\&          <key>catalogs</key>
\&          <array>
\&                  <string>autopkg</string>
\&          </array>
\&          <key>display_name</key>
\&          <string>Google Chrome Web Browser</string>
\&  </dict>
\&  </plist>
.Ve
.PP
Example \*(L"Dynamic\*(R" Data Plist for Adobe Flash Player
.PP
.Vb 10
\&  <?xml version="1.0" encoding="UTF\-8"?>
\&  <!DOCTYPE plist PUBLIC "\-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList\-1.0.dtd">
\&  <plist version="1.0">
\&  <dict>
\&          <key>autoMunkiImporter</key>
\&          <dict>
\&                  <key>URLToMonitor</key>
\&                  <string>http://get.adobe.com/flashplayer/</string>
\&                  <key>downloadLinkRegex</key>
\&                  <string>Download Now</string>
\&                  <key>emailReports</key>
\&                  <true/>
\&                  <key>itemToImport</key>
\&                  <string>Adobe Flash Player.pkg</string>
\&                  <key>munkiimportOptions</key>
\&                  <string>\-\-subdirectory "apps/adobe"</string>
\&                  <key>name</key>
\&                  <string>AdobeFlashPlayer</string>
\&                  <key>secondLinkRegex</key>
\&                  <string>location.href\es*=\es*\*(Aq(.+?)\*(Aq</string>
\&                  <key>type</key>
\&                  <string>dynamic</string>
\&          </dict>
\&          <key>catalogs</key>
\&          <array>
\&                  <string>autopkg</string>
\&          </array>
\&          <key>description</key>
\&          <string>Adobe Flash Player Plugin for Web Browsers</string>
\&          <key>display_name</key>
\&          <string>Adobe Flash Player</string>
\&  </dict>
\&  </plist>
.Ve
.PP
Example \*(L"Sparkle\*(R" Data Plist for \s-1VLC\s0
.PP
.Vb 10
\&  <?xml version="1.0" encoding="UTF\-8"?>
\&  <!DOCTYPE plist PUBLIC "\-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList\-1.0.dtd">
\&  <plist version="1.0">
\&  <dict>
\&          <key>autoMunkiImporter</key>
\&          <dict>
\&                  <key>URLToMonitor</key>
\&                  <string>http://update.videolan.org/vlc/sparkle/vlc.xml</string>
\&                  <key>downloadLinkRegex</key>
\&                  <string></string>
\&                  <key>emailReports</key>
\&                  <true/>
\&                  <key>itemToImport</key>
\&                  <string>VLC.app</string>
\&                  <key>munkiimportOptions</key>
\&                  <string>\-\-subdirectory "apps/vlc"</string>
\&                  <key>name</key>
\&                  <string>VLC</string>
\&                  <key>secondLinkRegex</key>
\&                  <string></string>
\&                  <key>type</key>
\&                  <string>sparkle</string>
\&                  <key>userAgent</key>
\&                  <string></string>
\&          </dict>
\&          <key>catalogs</key>
\&          <array>
\&                  <string>autopkg</string>
\&          </array>
\&          <key>description</key>
\&          <string>VLC Media Player plays a wide range of different video and audio formats.</string>
\&  </dict>
\&  </plist>
.Ve
.SH "DEFAULT SETTINGS PLIST"
.IX Header "DEFAULT SETTINGS PLIST"
The default settings plist contains configuration for the script. It has a series of required keys, 
some of which may be overwritten by individual data plists.
.PP
A default settings plist is installed to 
/Library/Application Support/autoMunkiImporter/_DefaultConfig.plist. You can however override this 
using the \-\-settings /path/to/settings.plist command line paramater.
.PP
Please take the time to review the settings and change them as appropriate for your environment. 
If the email settings aren't changed, the script will exit during it's initial checks, even if 
emailing reports is disabled.
.SS "\s-1REQUIRED KEYS\s0"
.IX Subsection "REQUIRED KEYS"
.IP "\fBemailReports\fR <boolean>" 8
.IX Item "emailReports <boolean>"
Whether email reports should be sent (Default: True).
.IP "\fBfromAddress\fR <string>" 8
.IX Item "fromAddress <string>"
From email address to use for sending email (Default: replace_me@example.com). Needed regardless of 
whether emailReports is true or false.
.IP "\fBgitEnabled\fR <boolean>" 8
.IX Item "gitEnabled <boolean>"
Whether to add and commit new pkginfos with git (Default: False).
.IP "\fBgitPushAndPull\fR <boolean>" 8
.IX Item "gitPushAndPull <boolean>"
Whether to pull and push changes to and from a remote git repo (Default: False).
.IP "\fBlogFile\fR <string>" 8
.IX Item "logFile <string>"
Path to the log file to use (Default: /Library/Logs/autoMunkiImporter/autoMunkiImporter.log).
.IP "\fBlogFileMaxSizeInMBs\fR <number>" 8
.IX Item "logFileMaxSizeInMBs <number>"
Size in MBs that log files can grow to until they are rolled (Default: 1MB).
.IP "\fBmakecatalogs\fR <boolean>" 8
.IX Item "makecatalogs <boolean>"
Whether makecatalogs should be run at the end of each import (Default: True).
.IP "\fBmaxNoOfLogsToKeep\fR <number>" 8
.IX Item "maxNoOfLogsToKeep <number>"
Maximum number of logs files to keep (Default: 5).
.IP "\fBsmtpServer\fR <string>" 8
.IX Item "smtpServer <string>"
\&\s-1SMTP\s0 server to use for sending email (Default: replace_me.example.com). Needed regardless of 
whether emailReports is true or false.
.IP "\fBstatusPlistPath\fR <string>" 8
.IX Item "statusPlistPath <string>"
Path to status plist, which gives a summary of all applications being monitored 
(Default: /Library/Logs/autoMunkiImporter/autoMunkiImporterStatus.plist).
.IP "\fBsubjectPrefix\fR <string>" 8
.IX Item "subjectPrefix <string>"
Prefix to add to email subject lines (Default: [Auto Munki Import]). Needed regardless of whether 
emailReports is true or false.
.IP "\fBtoAddress\fR <string>" 8
.IX Item "toAddress <string>"
To email address to use for receiving email (Default: replace_me@example.com). Needed regardless of 
whether emailReports is true or false.
=item \fBuserAgent\fR <string>
.Sp
The User Agent string to use when attempting to download applications (Default: Mozilla/5.0 
(Macintosh; Intel Mac \s-1OS X 10_7_5\s0) AppleWebKit/536.26.14 (\s-1KHTML,\s0 like Gecko) Version/6.0.1 
Safari/536.26.14). I recommendation you use Safari's User Agent for your primary \s-1OS \s0(the default is 
for Lion).
.Sp
Once you have configured the settings plist, Auto Munki Importer should now have everything it 
needs to run. You can verify this by running autoMunkiImporter.pl \-\-test. You should get 
\&\*(L"All tests passed...\*(R" if everything has been configured correctly.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
This script requires the following Perl modules to be installed:\-
 * Date::Parse
 * Mail::Mailer
 * URI::Escape
 * \s-1URI::URL
\&\s0 * WWW:Mechanize
.PP
You can test if a module is installed by running perl \-MModule::Name \-e 1 on the command line. 
There will be no output if it's installed, otherwise you will get an error 
(\*(L"Can't locate Module/Name.pm in \f(CW@IN\fRC(...)\*(R") if it's not installed.
.PP
Note that there is no space between \-M and the module name, e.g. \-MDate::Parse.
.PP
This script uses the perlplist.pl library, that contains copyrighted code from James Reynolds, and 
the University of Utah. The full licence text is available within the perlplist.pl file which is 
located at /usr/local/autoMunkiImporter/perlplist.pl.
.SH "FINDING THE URL"
.IX Header "FINDING THE URL"
In Safari you can right click on a link and \*(L"Copy Link\*(R", or view the pages source to determine the 
\&\s-1URL.\s0 If you have the Develop menu (Preferences \-> Advanced \-> Show Develop meun in menu bar) 
enabled, right click on an item and Inspect Element. This will show you the specific \s-1HTML\s0 behind a 
link.
.PP
For tricker pages, and apps using Sparkle to update I recommend using SquidMan 
http://squidman.net/squidman/.
.SS "\s-1SQUIDMAN\s0"
.IX Subsection "SQUIDMAN"
\&\s-1SQUIDMAN\s0 is a easy to use squid proxy. You can use it to log all requests, and using this 
information build our data plist.
.PP
Once you have it installed, select the Template tab under Preferences add \*(L"strip_query_terms off\*(R". 
This will cause the entire \s-1URL\s0 to be shown. Start (or restart) SquidMan and then set the proxy 
server for your machine to localhost:8080 (or the appropriate values). Then 
tail \-f ~/Library/Logs/squid/squid\-access.log and you will see what URLs are accessed.
.SH "TROUBLESHOOTING"
.IX Header "TROUBLESHOOTING"
I has released this script as a service to the broader community, as is, in an unsupported manner 
with no guarantees of support from either myself or my employer (The Australian National 
University).
.PP
\&\fBTry running munkiimport manually\fR
.PP
If you can't import items with munkiimport, autoMunkiImporter.pl will fail. The most likely 
problems are that the repo isn't mounted and / or your user doesn't have permissions to write to 
the repo.
.PP
\&\fBTry a verbose run\fR
.PP
Try running autoMunkiImporter.pl \-\-verbose \-\-data /path/to/individual/data.plist. This will show 
more information that may help in tracking down the problem.
.PP
\&\fBLook at the log file\fR
.PP
Open the log file in your favourite text editor. There maybe some useful information in it. The 
default location for the logs are /Library/XLogs/XautoMunkiImporter. The log location can be 
overridden by the data plist however.
.PP
\&\fBCurl\fR
.PP
curl is used to access the web pages, handle redirects, and finally check if the application should 
be downloaded, and if so to download the application. You will occasionally get different results 
from curl then from Safari, so testing curl manually may be helpful.
.PP
The best strategy is to use curl \-\-head \-\-location http://www.example.com/path/to/url.ext and 
review it's content. Sites like Google Code block retrieving headers which is required for this 
script to work. In this case one of the returned headers will be X\-Content-Type-Options: nosniff.
.PP
Also try using different (or no) User Agent (curl \-\-user\-agent \*(L"my agent\*(R").
.SH "LICENCE"
.IX Header "LICENCE"
Copyright (c) 2012, Adam Reed
.PP
All rights reserved.
.PP
Redistribution and use in source and binary forms, with or without modification, are permitted 
provided that the following conditions are met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright notice, this list of 
conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright notice, this list of 
conditions and the following disclaimer in the documentation and/or other materials provided with 
the distribution.
.IP "\(bu" 4
Neither the name of the \*(L"Adam Reed\*(R" nor the names of its contributors may be used to 
endorse or promote products derived from this software without specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \*(L"AS IS\*(R" AND ANY EXPRESS OR 
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND 
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
DAMAGES \s0(\s-1INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF USE, 
DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
IN CONTRACT, STRICT LIABILITY, OR TORT \s0(\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT 
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Adam Reed <adam.reed@anu.edu.au>
